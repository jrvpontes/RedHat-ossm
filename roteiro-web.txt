################################################################################
#pré requisitos
################################################################################
- git client
    - clone https://github.com/jrvpontes/RedHat-proderj
- helm client
    - https://helm.sh/docs/intro/install/
- oc client
    - https://docs.openshift.com/container-platform/4.7/cli_reference/openshift_cli/getting-started-cli.html
--------------------------------------------------------------------------------
################################################################################

################################################################################
- Instalação via web-console
################################################################################
- Service mesh
    instalar service-mesh operators
        - elastic search - provided by Red Hat
        - jaeger - provided by CNCF
        - kiali - provided by Red Hat
        - service mesh - provided by Red Hat

    - oc new-project proderj-dit-infra-ossm
    configurar service-mesh instances
        - control-plane
            - é o objeto reponsável por colocar os 'pods' dos aplicativo de apoio no acessar
                
        - member-roll
            - sem membros

- aplicações
    - oc new-project proderj-dss-apps
    - oc annotate ns proderj-dss-apps istio-injection=enabled
    - ajustar proderj-dit-infra-ossm >> Member Roll >> Spec >> Members [proderj-dss-apps]
    - oc create -f order-deploy.yaml
    - oc create -f product-deploy.yaml
    - oc new-app --name=sonda registry.access.redhat.com/ubi8/ubi-minimal:8.5

- aplicar configurações istio:
    - oc create -f 0_istio-gateway.yaml
    - oc create -f 1_istio-virtual-service.yaml
- testar pods # opcional
- sondar projetos
    - oc rsh pods/sonda-1-deploy /bin/bash
        - curl order:8080/order
        - curl product:8080/spl50


- acessar routes
    - ${OSSM_INGRES}/order
    - ${OSSM_INGRES}/spl50
        
